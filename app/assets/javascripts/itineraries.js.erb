$(document).on('turbolinks:load', function main() {

  $('.show-all a').on('click', function(e) {
    e.preventDefault()
    fetch(`/itineraries.json`).then(res => res.json()).then(function(data) {
      // Remove featured itineraries
      $('.featured').html("")
      $('.search-itineraries').html("")
      $('.sort-button').html("Sort A-Z")

      data.forEach((itinerary) => {
        let newItinerary = new Itinerary(itinerary)
        let itineraryHtml = newItinerary.formatIndex()
        $('.search-itineraries').append(itineraryHtml)
      })
    })
  })

  $('.sort-button').on('click', function(event) {
    event.preventDefault()
    fetch(`/itineraries.json`)
    .then(res => res.json())
    .then(data => {
      $('.featured').html("")
      $('.search-itineraries').html("")

      let sorted_data = [];

      data.sort(function(a,b) {
        let itineraryA = a.title.toUpperCase();
        let itineraryB = b.title.toUpperCase();
        if (itineraryA < itineraryB) {
          return -1;
        }
        if (itineraryA > itineraryB) {
          return 1;
        }
        return 0;
      })

      data.forEach(itinerary => {
        let newItinerary = new Itinerary(itinerary)
        let itineraryHtml = newItinerary.formatIndex()
        $('.search-itineraries').append(itineraryHtml)
      })
    })
  })

  let mapKeys = "";

  $('.search-input').on('keydown', function(e) {

    // Add search input to mapKeys
    if(e.keyCode >= 65 && e.keyCode <= 90 ) {
      mapKeys += String.fromCharCode(e.keyCode)
    } else if(e.keyCode == 8 && mapKeys.length > 0) {
      mapKeys = mapKeys.substring(0, mapKeys.length - 1)
    } else if(e.keyCode == 13) {
      e.preventDefault()
    }

    fetch(`/itineraries.json`).then(res => res.json()).then(function(data) {

      // Remove featured itineraries
      $('.featured').html("")
      $('.search-itineraries').html("")
      $('.sort-button').html("Sort A-Z")

      // search through itineraries
      let filter = []
      function filteredItineraries(data) {
        data.forEach((itinerary) => {
          let searchTerms = mapKeys.toLowerCase()
          let itineraryTitle = itinerary.title.toLowerCase()
          let itineraryDescription = itinerary.description.toLowerCase()
          let itineraryBudget = itinerary.budget
          if(itineraryTitle.includes(searchTerms) || itineraryDescription.includes(searchTerms)) {
              filter.push(itinerary)
          }
        })
      }
      filteredItineraries(data)
      filter.forEach((itinerary) => {
        let newItinerary = new Itinerary(itinerary)
        let itineraryHtml = newItinerary.formatIndex()

        $('.search-itineraries').append(itineraryHtml)
      })
    })
  })

  $(document).on('click', '.show-itinerary-button', function(e) {
    e.preventDefault()
    const id = parseInt(e.target.id)

    fetch(`/itineraries.json`).then(res => res.json()).then(function(data) {
      const itinerary = data.find(itinerary => itinerary.id === id);
      const select = '#show-itinerary-' + id;
      const itineraryHtml = new Itinerary(itinerary).formatShow()
      if($(select).html() === "") {
        $(select).append(itineraryHtml)
      } else {
        $(select).html("")
      }
    })

  })


  // Hijack submit button and post method on "Like" for each itinerary
  $(document).on('click', "#target", function(e) {
    e.preventDefault()
    let id = $(this).attr('data-id')
    let values = $(this).serialize();
    let posting = $.post(`/itineraries/${id}/reviews`, values)

    posting.done(function(data) {
        let reviews = data
        let number_of_likes = 0

        reviews.forEach((review) => {
          if(review.like == true) {
            number_of_likes++
          }
        })
        // Update likes per post below
        if(number_of_likes == 1) {
          $(`.likes-${data[0].itinerary_id}`).text(number_of_likes + " Like")
        } else {
          $(`.likes-${data[0].itinerary_id}`).text(number_of_likes + " Likes")
        }
    })
  })

  $(document).on('click', '.show-reviews', function(e) {
    e.preventDefault()
    let itinerary_id = $(this).attr('data-id')
    fetch(`/itineraries/${itinerary_id}/reviews.json`).then(res => res.json()).then(function(data) {
      let reviews = data

      function usersReviewed() {
        let users = []
        reviews.forEach((review) => {
          users.push(review.user.first_name)
        })
        if(users.length == 1){
          return `${users[0]} likes this`;
        }else if(users.length == 2) {
          return `${users[0]} and ${users.length-1} others like this`;
        } else {
          return `${users[0]}, ${users[1]}, and ${users.length-1} others like this`;
        }
      }

      if(data.length > 0) {
        $(`.likes-${itinerary_id}`).text(usersReviewed())
      }
    })
  })
})

function Itinerary(itinerary) {
  this.id = itinerary.id
  this.title = itinerary.title
  this.description = itinerary.description
  this.budget = itinerary.budget
  this.departing_city = itinerary.departing_city
  this.departing_country = itinerary.departing_country
  this.user = itinerary.user
  this.reviews = itinerary.reviews
  this.number_of_likes = 0;

  this.reviews.forEach((review) => {
    if(review.like) {
      this.number_of_likes++
    }
  })
}

Itinerary.prototype.formatIndex = function() {
  let itineraryHtml = `
    <div class="itinerary" id="itinerary-${this.id}">
      <a class="show-itinerary-button" id="${this.id} "href=""><h4 id="${this.id}">${this.title}</h4></a>
      <img src="<%= asset_path("airplane-img.jpg")%>">
      <div id="show-itinerary-${this.id}"></div>
      <div class="social-likes">
        <form id="target" method="post" data-id="${this.id}" action="/itineraries/${this.id}/reviews">
          <input type="image" src="<%= asset_path("iconmonstr-favorite-4-240.png")%>" alt="Submit" width="24" height="24"></input>
        </form>
        <a class="show-reviews" data-id="${this.id}" href="/itineraries/${this.id}/reviews"><div class="likes-${this.id}">${this.number_of_likes == 1 ? this.number_of_likes + " Like" : this.number_of_likes + " Likes"}</div></a>
      </div>

    </div>
  `
  return itineraryHtml
}

Itinerary.prototype.formatShow = function() {
  let itineraryShow = `
  <p>${this.description} </p>
  <p>Budget: $${this.budget}</p>
  <p>Created by: ${this.user.first_name}</p>
  `
  return itineraryShow
}
